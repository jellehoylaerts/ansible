---
- name: Adding mariadb repo
  template:
    src: MariaDB.repo.j2
    dest: /etc/yum.repos.d/MariaDB.repo
    owner: root
    group: root

- name: Installing pre-reqs
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - MySQL-python
    - socat
    - policycoreutils-python

- name: Installing mariadb
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - MariaDB-server
    - MariaDB-client
    - galera

- name: Open firewall for external access to MySQL
  firewalld:
    service: mysql
    permanent: true
    immediate: true
    state: enabled

- name: Open Galera ports on firewall
  firewalld:
    port: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  with_items:
    - 4444/tcp
    - 4567/tcp
    - 4568/tcp

- name: Ensure mariadb is enabled on boot
  systemd:
    name: mysqld
    enabled: yes

- name: Create folder oom folder
  file:
    path: /etc/systemd/system/mariadb.service.d
    state: directory
    recurse: yes
    owner: root
    group: root
    mode: 0766

- name: Add the oom overriding file
  template:
    src: oom-score-adjust.conf.j2
    dest: /etc/systemd/system/mariadb.service.d/oom-score-adjust.conf
    owner: root
    group: root
    mode: 0644

- name: Force systemd to reread configs
  systemd:
    daemon_reload: true

- name: Checking if galera cluster is already setup
  stat:
    path: /etc/galera_cluster_configured
  register: galera_cluster_configured

- name: Stopping mysql
  systemd:
    name: mysqld
    state: stopped
  when: not galera_cluster_configured.stat.exists

- name: Killing lingering mysql processes
  command: "pkill mysqld"
  ignore_errors: true
  when: not galera_cluster_configured.stat.exists

- name: Set galera in permissive mode
  shell: "semanage permissive -a mysqld_t"
  when: not galera_cluster_configured.stat.exists

- name: Configuring db server and galera
  template:
    src: server.cnf.j2
    dest: /etc/my.cnf.d/server.cnf
  register: mariadb_galera_cluster_reconfigured

- name: Bootstrapping galera cluster
  command: "/usr/bin/galera_new_cluster"
  when: >
        not galera_cluster_configured.stat.exists and
        inventory_hostname == galera_mysql_master_node

- name: Join galera cluster
  systemd:
    name: mysqld
    state: restarted
  serial: 1
  when: >
        not galera_cluster_configured.stat.exists and
        inventory_hostname != galera_mysql_master_node

- name: Marking galera cluster as configured
  file:
    path: /etc/galera_cluster_configured
    state: touch
  when: not galera_cluster_configured.stat.exists

- name: Generate SELinux rules
  shell: "grep mysql /var/log/audit/audit.log | audit2allow -M mariadb-galera"
  when: not galera_cluster_configured.stat.exists

- name: Add mariadb-galera module to SELinux policy
  shell: "semodule -i mariadb-galera.pp"
  when: not galera_cluster_configured.stat.exists

- name: Enable SELinux enforcing policy
  shell: "semanage permissive -d mysqld_t"
  when: not galera_cluster_configured.stat.exists

- name: Restarting MySQL (Master)
  systemd:
    name: mysqld
    state: restarted
  register: mariadb_galera_cluster_master_restarted
  when: >
        galera_cluster_configured['stat']['exists'] and
        inventory_hostname == galera_mysql_master_node and
        mariadb_galera_cluster_reconfigured['changed']

- name: Waiting For MySQL (Master)
  wait_for:
    port: "{{ mariadb_mysql_port }}"
    host: "{{ galera_cluster_bind_address }}"
  when: >
        inventory_hostname == galera_mysql_master_node and
        mariadb_galera_cluster_master_restarted['changed']

- name: Restarting MySQL (Non-Master)
  systemd:
    name: mysqld
    state: restarted
  serial: 1
  register: mariadb_galera_cluster_non_master_restarted
  when: >
        galera_cluster_configured['stat']['exists'] and
        inventory_hostname != galera_mysql_master_node and
        mariadb_galera_cluster_reconfigured['changed']

- name: Waiting For MySQL (Non-Master)
  wait_for:
    port: "{{ mariadb_mysql_port }}"
    host: "{{ galera_cluster_bind_address }}"
  when: >
        inventory_hostname != galera_mysql_master_node and
        mariadb_galera_cluster_non_master_restarted['changed']

- name: Updating root passwords
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mariadb_mysql_root_password }}"
  run_once: true
  with_items:
    - '{{ ansible_hostname }}'
    - '127.0.0.1'
    - '::1'
    - localhost
  ignore_errors: true
